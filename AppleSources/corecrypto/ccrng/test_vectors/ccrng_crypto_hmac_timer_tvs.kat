/* Copyright (c) (2020-2022) Apple Inc. All rights reserved.
 *
 * corecrypto is licensed under Apple Inc.â€™s Internal Use License Agreement (which
 * is contained in the License.txt file distributed with corecrypto) and only to
 * people who accept that license. IMPORTANT:  Any license rights granted to you by
 * Apple Inc. (if any) are limited to internal use within your organization only on
 * devices and computers you own or control, for the sole purpose of verifying the
 * security characteristics and correct functioning of the Apple Software.  You may
 * not, directly or indirectly, redistribute the Apple Software or any portions thereof.
 */

static const uint8_t cctest_fa3d673b598c_init_seed_1[] = { 0x80, 0x7c, 0x73, 0x73, 0xe9, 0x76, 0x4d, 0x86, 0xb8, 0x1b, 0xa6, 0xf4, 0x63, 0x1d, 0x4d, 0x00, 0x08, 0x56, 0x1f, 0x15, 0x0e, 0x56, 0x20, 0x49, 0x7d, 0xbe, 0xe9, 0x25, 0x52, 0x35, 0x66, 0x98, 0x3f, 0x2f, 0x7e, 0xaa, 0xb2, 0xad, 0xe5, 0x27, 0x15, 0xac, 0x3d, 0xc7, 0xaf, 0x02, 0xff, 0xba, 0x33, 0x96, 0xa7, 0xe6, 0x08, 0xbe, 0xe7, 0xe6, 0x50, 0xef, 0x7b, 0x6f, 0x21, 0x0e, 0x20, 0x08 };
static const uint8_t cctest_fa3d673b598c_init_nonce_2[] = { 0x27, 0xc6, 0x84, 0xb7, 0xf8, 0x5d, 0x38, 0x75, 0xeb, 0x1b, 0x4f, 0x90, 0x41, 0xc3, 0x19, 0x3b, 0xa4, 0x62, 0x7a, 0x51, 0x95, 0xbe, 0xd6, 0xd5, 0x6d, 0xd8, 0x28, 0x0a, 0x6b, 0x0e, 0xa2, 0xf1 };
static const uint8_t cctest_fa3d673b598c_init_ps_3[] = { 0xcf, 0x25, 0x2f, 0xe4, 0xec, 0x7a, 0xaf, 0xd6 };
static const uint8_t cctest_fa3d673b598c_gen1_4[] = { 0xe7, 0xf5, 0xb9, 0x30, 0x68, 0x26, 0xad, 0x09, 0x24, 0x78, 0x88, 0x5f, 0x15, 0xe0, 0x33, 0x13, 0x51, 0x65, 0x5f, 0x92, 0x28, 0x8e, 0xde, 0x98, 0xfe, 0x72, 0x3c, 0xbd, 0x14, 0x2e, 0xce, 0x30, 0xf0, 0xed, 0x77, 0xc2, 0x2b, 0xcf, 0xb3, 0xba, 0xa5, 0xf4, 0xb9, 0x08, 0x4d, 0xf9, 0xe3, 0xd4, 0xf1, 0xe7, 0x04, 0xff, 0xf5, 0x45, 0x4f, 0xb7, 0x80, 0x87, 0x22, 0xdf, 0x98, 0x3a, 0x8e, 0x36, 0xa6, 0xd8, 0x6c, 0xbb, 0xed, 0xaf, 0xf0, 0x1d, 0xed, 0xb3, 0x24, 0xec, 0x73, 0x79, 0xe1, 0x27, 0x29, 0xc3, 0x36, 0x5b, 0x41, 0x46, 0x15, 0xb9, 0xed, 0x4f, 0x3d, 0x18, 0x72, 0xa5, 0xc9, 0x4c, 0xd3, 0x7f, 0xa8, 0xb4, 0xb0, 0xec, 0xd5, 0xc5, 0xa4, 0x54, 0x1d, 0x37, 0xb5, 0x54, 0x08, 0x3a, 0x0c, 0x0a, 0xaa, 0xb8, 0x6e, 0x4c, 0x09, 0xa9, 0x8f, 0x31, 0xd5, 0x3c, 0xfb, 0xd6, 0x66, 0xdb, 0x0c, 0xae, 0xb1, 0xc3, 0x38, 0x95, 0x28, 0x5f, 0xe3, 0x89, 0x94, 0x07, 0xbe, 0xb2, 0xb8, 0x7b, 0x47, 0xac, 0x24, 0x5f, 0x22, 0x72, 0xe5, 0x02, 0xd3, 0xc7, 0x06, 0x92, 0xe4, 0xfa, 0xbc, 0x38, 0xef, 0xe4, 0x01, 0xb2, 0x9d, 0x96, 0x2b, 0xfd, 0xbe, 0x32, 0x66, 0xb1, 0x14, 0x8c, 0xfd, 0x4d, 0x8a, 0xb5, 0x4c, 0x8a, 0x24, 0x36, 0xe1, 0x3c, 0x81, 0xa7, 0x0e, 0xdc, 0x80, 0xeb, 0xd8, 0x9d, 0x77, 0x9b, 0x4e, 0xd3, 0xc6, 0xb9, 0x5e, 0x2b, 0x4b, 0xd1, 0x26, 0xb3, 0x1c, 0xec, 0x2e, 0x47, 0xa7, 0xba, 0xe0, 0x6c, 0xef, 0xaa, 0x7e, 0xcd, 0x0f, 0xda, 0x9f, 0x51, 0x8f, 0x6f, 0x07, 0xc5, 0x23, 0xa2, 0xd6, 0x18, 0x7e, 0x32, 0x6e, 0x8e, 0x1e, 0x7d, 0x0e, 0x51, 0xad, 0xb9, 0xde, 0x4f, 0x1a, 0x52, 0xf0, 0xe3, 0x70, 0x16, 0x20, 0x38, 0x1a, 0xb4, 0xed, 0xdd, 0xd5, 0x8e, 0x3e, 0x07 };
static const uint8_t cctest_fa3d673b598c_genn_5[] = { 0xb3, 0x35, 0x66, 0xff, 0x92, 0x46, 0x49, 0x5d, 0xbb, 0x9d, 0x06, 0xca, 0xb1, 0x18, 0x17, 0x33, 0x93, 0x19, 0xe5, 0x62, 0x18, 0x8a, 0xf1, 0x16, 0xe6, 0x86, 0xba, 0xa5, 0x2b, 0xf3, 0x59, 0xac, 0xa0, 0xcf, 0xd7, 0x54, 0x5d, 0x1c, 0xf7, 0x16, 0x6f, 0x34, 0x7a, 0x54, 0xf4, 0x8a, 0x68, 0xc8, 0x79, 0x1a, 0x2c, 0x13, 0x36, 0x96, 0xb5, 0xe4, 0x89, 0x41, 0xfb, 0x22, 0x72, 0x2e, 0x75, 0x12, 0x6f, 0x12, 0x27, 0xa5, 0x16, 0xdf, 0x57, 0x97, 0x1b, 0xe0, 0x42, 0xdc, 0xbd, 0x11, 0xa2, 0x1a, 0x5f, 0xa5, 0xe9, 0x7a, 0x63, 0x84, 0x55, 0x6f, 0x25, 0x54, 0xfd, 0x5d, 0xb4, 0x0d, 0xff, 0xde, 0xad, 0x9b, 0x26, 0x2d, 0x0a, 0x2c, 0x0b, 0x6c, 0x84, 0x55, 0xd7, 0xbe, 0xa8, 0xc4, 0x41, 0x33, 0xb1, 0x10, 0x11, 0xc0, 0xe3, 0x44, 0x56, 0x1e, 0x1d, 0x67, 0xcd, 0x6f, 0xdf, 0x0c, 0x32, 0xfe, 0x18, 0xb5, 0xc7, 0xb5, 0x67, 0x2a, 0xc0, 0x17, 0x74, 0x0c, 0x4e, 0x94, 0x2d, 0x01, 0xf3, 0xc3, 0x08, 0x5d, 0x87, 0x89, 0xc7, 0x25, 0x68, 0x29, 0x5c, 0x57, 0x96, 0x00, 0x16, 0xbb, 0x7e, 0xe9, 0xa5, 0xd1, 0x16, 0x3f, 0x41, 0x7b, 0x12, 0x20, 0xb6, 0x40, 0xce, 0x97, 0xa2, 0x72, 0xdb, 0xa4, 0x56, 0x12, 0x12, 0xd3, 0xfc, 0xf1, 0x4d, 0x44, 0x9a, 0x33, 0x53, 0x96, 0x47, 0x02, 0x9a, 0x29, 0x56, 0xe6, 0x87, 0xa6, 0xcf, 0xe5, 0x32, 0xe7, 0x7f, 0xe3, 0xe6, 0x80, 0x71, 0x3f, 0x76, 0x0b, 0xd4, 0x74, 0x2f, 0x2a, 0x15, 0xd5, 0xe7, 0x56, 0x55, 0xcd, 0x70, 0x78, 0x43, 0xd7, 0x48, 0x0f, 0x3c, 0xac, 0xc1, 0xdf, 0x99, 0x9a, 0x40, 0x86, 0xd2, 0xec, 0xda, 0x95, 0x6d, 0x8c, 0x63, 0x2a, 0x47, 0x32, 0xf5, 0xba, 0x0e, 0x25, 0xc1, 0xad, 0x44, 0x62, 0xf8, 0x03, 0xa7, 0x7b, 0x42, 0x88 };
static const uint8_t cctest_fa3d673b598c_reseed_nonce_6[] = {  };
static const uint8_t cctest_fa3d673b598c_gen_after_reseed_7[] = { 0x16, 0x20, 0xd7, 0x70, 0x58, 0xe8, 0x11, 0x66, 0x1a, 0x27, 0x1f, 0xc9, 0x7b, 0xb1, 0x61, 0xac, 0xff, 0x6d, 0xe2, 0x62, 0xdb, 0x9e, 0x6b, 0x61, 0x5b, 0x07, 0xb1, 0x19, 0xf8, 0x21, 0xb7, 0x65, 0x6d, 0xae, 0x8f, 0xc0, 0xed, 0xf5, 0x8d, 0x03, 0x59, 0x41, 0x1a, 0x25, 0x2a, 0xd4, 0xc6, 0x65, 0x24, 0x9b, 0x73, 0xb6, 0x55, 0xa4, 0x4c, 0xba, 0xbf, 0x50, 0x5b, 0xc7, 0xa2, 0x4a, 0xa7, 0x5c, 0x5a, 0x96, 0xe7, 0xe9, 0xda, 0x9c, 0x68, 0x69, 0x4b, 0x8a, 0x24, 0x3b, 0xe3, 0x34, 0x9c, 0x07, 0x29, 0xb6, 0x5d, 0x8c, 0xc7, 0x02, 0x68, 0xe0, 0xba, 0xb9, 0x29, 0xc8, 0xaa, 0x00, 0x0e, 0xd8, 0x40, 0xd2, 0xcc, 0xb7, 0xea, 0x4a, 0x97, 0x22, 0xad, 0x98, 0xf2, 0xa2, 0x82, 0x29, 0x91, 0xc3, 0xb0, 0x6a, 0x97, 0x23, 0xc0, 0xa9, 0xde, 0x4e, 0x2c, 0x5c, 0x41, 0x08, 0x4d, 0xb8, 0x9b, 0x1c, 0xe2, 0x0d, 0x77, 0x75, 0x96, 0x6f, 0x54, 0x97, 0xac, 0x8f, 0xba, 0xfd, 0xff, 0x70, 0x6e, 0x22, 0xaf, 0xfd, 0x9a, 0x78, 0x15, 0xb3, 0x35, 0xe0, 0x15, 0x47, 0xf4, 0xbb, 0x79, 0xb0, 0xf0, 0x11, 0x98, 0x63, 0xc3, 0x14, 0x20, 0x25, 0x5b, 0xbd, 0xf5, 0x2e, 0x72, 0x18, 0x5a, 0x0e, 0xcb, 0xf9, 0x0d, 0x37, 0x27, 0xaa, 0x9a, 0x73, 0x94, 0x05, 0x55, 0x2d, 0xda, 0xfc, 0x88, 0xe4, 0xc8, 0xb9, 0x9f, 0x38, 0x8e, 0x7a, 0xb5, 0x39, 0x1e, 0xa4, 0x87, 0x8e, 0x4b, 0xff, 0x83, 0xdf, 0x43, 0x2d, 0x72, 0xb9, 0x0d, 0x42, 0x7e, 0x4e, 0x70, 0x8a, 0xdc, 0x8e, 0xb2, 0x85, 0x8f, 0x0c, 0xfc, 0x69, 0x41, 0x11, 0xbb, 0x5d, 0xb5, 0x9b, 0x86, 0xbf, 0x3b, 0xf9, 0x2c, 0x88, 0xbd, 0xa5, 0x23, 0x45, 0xa2, 0xca, 0xf1, 0xc4, 0x4d, 0x47, 0x0b, 0x13, 0xcf, 0x62, 0xb8, 0x2b, 0x76, 0x09, 0x7b, 0x9d };
static const struct ccrng_crypto_hmac_drbg_test_vector cctest_fa3d673b598c_test_vector_8 = { .init_seed = cctest_fa3d673b598c_init_seed_1, .init_seed_len = 64, .init_nonce = cctest_fa3d673b598c_init_nonce_2, .init_nonce_len = 32, .init_ps = cctest_fa3d673b598c_init_ps_3, .init_ps_len = 8, .gen1 = cctest_fa3d673b598c_gen1_4, .gen1_len = 256, .genn = cctest_fa3d673b598c_genn_5, .genn_len = 256, .reseed_nonce = cctest_fa3d673b598c_reseed_nonce_6, .reseed_nonce_len = 0, .gen_after_reseed = cctest_fa3d673b598c_gen_after_reseed_7, .gen_after_reseed_len = 256, .tcId = 0, .di = ccsha256_di, .ngens = 32 };
static const struct ccrng_crypto_hmac_drbg_test_vector *ccrng_crypto_hmac_timer_tvs[] = { &cctest_fa3d673b598c_test_vector_8 };

