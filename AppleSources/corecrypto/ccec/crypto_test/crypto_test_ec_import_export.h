/* Copyright (c) (2019-2021,2023) Apple Inc. All rights reserved.
 *
 * corecrypto is licensed under Apple Inc.â€™s Internal Use License Agreement (which
 * is contained in the License.txt file distributed with corecrypto) and only to
 * people who accept that license. IMPORTANT:  Any license rights granted to you by
 * Apple Inc. (if any) are limited to internal use within your organization only on
 * devices and computers you own or control, for the sole purpose of verifying the
 * security characteristics and correct functioning of the Apple Software.  You may
 * not, directly or indirectly, redistribute the Apple Software or any portions thereof.
 */

//  Created by Apple Inc. on 5/7/19.
//

#ifndef crypto_test_ec_import_export_h
#define crypto_test_ec_import_export_h

const unsigned char key_bin_oid_only[] = {
    0x30, 0x31, 0x02, 0x01, 0x01, 0x04, 0x20, 0x79, 0xf4, 0x38, 0x5c, 0x35,
    0xe1, 0x97, 0xbf, 0xc7, 0x39, 0xc1, 0x2e, 0x40, 0x52, 0x9f, 0xd1, 0xf0,
    0x13, 0xa6, 0x94, 0xc5, 0xdc, 0x3b, 0x14, 0x5b, 0x08, 0x11, 0x28, 0xc5,
    0xb6, 0xc4, 0xd7, 0xa0, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07
};
size_t key_bin_oid_only_len = CC_ARRAY_LEN(key_bin_oid_only);

const unsigned char key_bin_priv_only[] = {
    0x30, 0x25, 0x02, 0x01, 0x01, 0x04, 0x20, 0x79, 0xf4, 0x38, 0x5c, 0x35,
    0xe1, 0x97, 0xbf, 0xc7, 0x39, 0xc1, 0x2e, 0x40, 0x52, 0x9f, 0xd1, 0xf0,
    0x13, 0xa6, 0x94, 0xc5, 0xdc, 0x3b, 0x14, 0x5b, 0x08, 0x11, 0x28, 0xc5,
    0xb6, 0xc4, 0xd7
};
size_t key_bin_priv_only_len = CC_ARRAY_LEN(key_bin_priv_only);


const uint8_t key_priv_p256[] =
{
    0x00, 0xdb, 0x78, 0x54, 0xd2, 0x1a, 0x80, 0xcf, 0x1c, 0x45, 0x4f, 0xfd, 0xe2, 0x4a, 0x9b,
    0x8a, 0xe8, 0xc3, 0x8f, 0x3f, 0x46, 0xb0, 0x74, 0xbe, 0x67, 0x3f, 0x81, 0xcb, 0x8d, 0x7d,
    0xc2, 0x0f, 0x91
};
const uint8_t key_pubComp_p256[] =
{
    0x03, 0x60, 0x69, 0x08, 0x57, 0xfd, 0xa1, 0xbe, 0xf2, 0x58, 0xd4, 0xb1, 0x89, 0x9e, 0x9a,
    0xf5, 0x6a, 0x5e, 0xbf, 0x63, 0x34, 0xd0, 0xb3, 0xe3, 0xa6, 0xd7, 0x47, 0xae, 0xe3, 0x18,
    0x54, 0x1d, 0x14
};
const uint8_t key_pubunComp_p256[]=
{
    0x04, 0x60, 0x69, 0x08, 0x57, 0xfd, 0xa1, 0xbe, 0xf2, 0x58, 0xd4, 0xb1, 0x89, 0x9e, 0x9a,
    0xf5, 0x6a, 0x5e, 0xbf, 0x63, 0x34, 0xd0, 0xb3, 0xe3, 0xa6, 0xd7, 0x47, 0xae, 0xe3, 0x18,
    0x54, 0x1d, 0x14, 0x86, 0x65, 0x58, 0xbd, 0x45, 0x63, 0x88, 0xd9, 0x6c, 0x2d, 0x75, 0xd9,
    0xa8, 0x12, 0xee, 0x26, 0xfc, 0x46, 0xc5, 0x52, 0xff, 0x31, 0x6a, 0xd6, 0xc6, 0xa7, 0x66,
    0xee, 0xd3, 0x58, 0x78, 0xa1
};
const uint8_t bogus_pub_compressed[] =
{
    0xeb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f
};
const uint8_t bogus_pub_uncompressed[]=
{
    0x05, 0x60, 0x69, 0x08, 0x57, 0xfd, 0xa1, 0xbe, 0xf2, 0x58, 0xd4, 0xb1, 0x89, 0x9e, 0x9a,
    0xf5, 0x6a, 0x5e, 0xbf, 0x63, 0x34, 0xd0, 0xb3, 0xe3, 0xa6, 0xd7, 0x47, 0xae, 0xe3, 0x18,
    0x54, 0x1d, 0x14, 0x86, 0x65, 0x58, 0xbd, 0x45, 0x63, 0x88, 0xd9, 0x6c, 0x2d, 0x75, 0xd9,
    0xa8, 0x12, 0xee, 0x26, 0xfc, 0x46, 0xc5, 0x52, 0xff, 0x31, 0x6a, 0xd6, 0xc6, 0xa7, 0x66,
    0xee, 0xd3, 0x58, 0x78, 0xa1
};

static uint8_t compressed_unit_point[] = { 0 };
static uint8_t bad_compressed_unit_point[] = { 2 };
static uint8_t bad_length_compressed_p256_point[] = { 2,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16,
                                                      17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };
static uint8_t bad_prefix_compressed_p256_point[] = { 1,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16,
                                                      17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };
static uint8_t leading_zeros_compressed_p256_point[] = { 2,  0,  0,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16,
                                                         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };
#endif /* crypto_test_ec_import_export_h */
